// This code was generated by the Gardens Point Parser Generator
// Copyright (c) Wayne Kelly, QUT 2005-2010
// (see accompanying GPPGcopyright.rtf)

// GPPG version 1.5.0
// Machine:  kommusoft-X75VD
// DateTime: 9/17/2013 5:09:13 PM
// UserName: kommusoft
// Input file <MiniZinc.bison - 9/17/2013 5:09:11 PM>

// options: lines

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Text;
using QUT.Gppg;

namespace ZincOxide.MiniZinc
{
internal enum Tokens {
    error=1,EOF=2,KWTYPE=3,KWENUM=4,KWINCL=5,KWCONS=6,
    KWSOLV=7,KWSATI=8,KWMINI=9,MWMAXI=10,KWOUTP=11,KWANNO=12,
    KWPRED=13,KWTEST=14,KWFUNC=15,KWWHER=16,KWVAR=17,KWPAR=18,
    KWBOOL=19,KWINT=20,KWFLOA=21,KWSTRI=22,KWANN=23,KWSET=24,
    KWOF=25,KWARRA=26,KWLIST=27,KWTUPL=28,KWRECO=29,KWANY=30,
    KWOP=31,KWIN=32,KWSUBS=33,KWSUPE=34,KWUNIO=35,KWDIFF=36,
    KWSYMD=37,KWINTE=38,KWNOT=39,KWDIV=40,KWMOD=41,KWFALS=42,
    KWTRUE=43,KWIF=44,KWTHEN=45,KWELSI=46,KWELSE=47,KWENDI=48,
    KWCASE=49,KWLET=50,COMMAD=51,COMMA=52,COLON=53,ACCENT=54,
    BAR=55,OACC=56,CACC=57,OBRK=58,CBRK=59,OFBR=60,
    CFBR=61,OFBA=62,CFBA=63,OPASSIG=64,OPUNDSC=65,OPEQUIV=66,
    OPIMPLI=67,OPRIMPL=68,OPVEE=69,OPWEDGE=70,OPLESTA=71,OPGRETA=72,
    OPLESEQ=73,OPGEAEQ=74,OPEQUAL=75,OPNEQUA=76,OPRANGE=77,OPINCRE=78,
    OPANNOT=79,OPADD=80,OPSUB=81,OPMUL=82,OPDOT=83,OPDIV=84,
    OPCASE=85,BOOLI=86,INTLI=87,FLOLI=88,STRLI=89,IDENT=90,
    NOISE=91,EOL=92,COMMENT=93};

internal partial class Parser: ShiftReduceParser<RealTree.Node, LexLocation>
{
#pragma warning disable 649
  private static Dictionary<int, string> aliasses;
#pragma warning restore 649
  private static Rule[] rules = new Rule[4];
  private static State[] states = new State[6];
  private static string[] nonTerms = new string[] {
      "model", "$accept", };

  static Parser() {
    states[0] = new State(new int[]{2,3,90,4},new int[]{-1,1});
    states[1] = new State(new int[]{2,2});
    states[2] = new State(-1);
    states[3] = new State(-2);
    states[4] = new State(new int[]{2,5});
    states[5] = new State(-3);

    for (int sNo = 0; sNo < states.Length; sNo++) states[sNo].number = sNo;

    rules[1] = new Rule(-2, new int[]{-1,2});
    rules[2] = new Rule(-1, new int[]{2});
    rules[3] = new Rule(-1, new int[]{90,2});
  }

  protected override void Initialize() {
    this.InitSpecialTokens((int)Tokens.error, (int)Tokens.EOF);
    this.InitStates(states);
    this.InitRules(rules);
    this.InitNonTerminals(nonTerms);
  }

  protected override void DoAction(int action)
  {
#pragma warning disable 162, 1522
    switch (action)
    {
      case 2: // model -> EOF
#line 38 "MiniZinc.bison"
{}
        break;
      case 3: // model -> IDENT, EOF
#line 39 "MiniZinc.bison"
{}
        break;
    }
#pragma warning restore 162, 1522
  }

  protected override string TerminalToString(int terminal)
  {
    if (aliasses != null && aliasses.ContainsKey(terminal))
        return aliasses[terminal];
    else if (((Tokens)terminal).ToString() != terminal.ToString(CultureInfo.InvariantCulture))
        return ((Tokens)terminal).ToString();
    else
        return CharToString((char)terminal);
  }

#line 45 "MiniZinc.bison"
/*
#line 46 "MiniZinc.bison"
 * All the code is in the helper file RealTreeHelper.cs
#line 47 "MiniZinc.bison"
 */ 
}
}
